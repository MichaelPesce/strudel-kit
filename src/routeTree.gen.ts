/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as IndexImport } from './routes/index';
import { Route as PlaygroundIndexImport } from './routes/playground/index';
import { Route as TaskFlowsSearchDataRepositoriesIndexImport } from './routes/task-flows/search-data-repositories/index';
import { Route as TaskFlowsMonitorActivitiesIndexImport } from './routes/task-flows/monitor-activities/index';
import { Route as TaskFlowsExploreDataIndexImport } from './routes/task-flows/explore-data/index';
import { Route as TaskFlowsSearchDataRepositoriesIdImport } from './routes/task-flows/search-data-repositories/$id';
import { Route as TaskFlowsRunComputationLayoutImport } from './routes/task-flows/run-computation/_layout';
import { Route as TaskFlowsMonitorActivitiesDetailImport } from './routes/task-flows/monitor-activities/detail';
import { Route as TaskFlowsMonitorActivitiesCalendarImport } from './routes/task-flows/monitor-activities/calendar';
import { Route as TaskFlowsExploreDataIdImport } from './routes/task-flows/explore-data/$id';
import { Route as TaskFlowsContributeDataLayoutImport } from './routes/task-flows/contribute-data/_layout';
import { Route as TaskFlowsCompareDataLayoutImport } from './routes/task-flows/compare-data/_layout';
import { Route as TaskFlowsRunComputationLayoutIndexImport } from './routes/task-flows/run-computation/_layout/index';
import { Route as TaskFlowsContributeDataLayoutIndexImport } from './routes/task-flows/contribute-data/_layout/index';
import { Route as TaskFlowsCompareDataLayoutIndexImport } from './routes/task-flows/compare-data/_layout/index';
import { Route as TaskFlowsContributeDataLayoutReviewImport } from './routes/task-flows/contribute-data/_layout/review';
import { Route as TaskFlowsContributeDataLayoutPortalImport } from './routes/task-flows/contribute-data/_layout/portal';
import { Route as TaskFlowsContributeDataLayoutNewImport } from './routes/task-flows/contribute-data/_layout/new';
import { Route as TaskFlowsCompareDataLayoutNewImport } from './routes/task-flows/compare-data/_layout/new';
import { Route as TaskFlowsCompareDataLayoutCompareImport } from './routes/task-flows/compare-data/_layout/compare';
import { Route as TaskFlowsRunComputationLayoutIdLayoutImport } from './routes/task-flows/run-computation/_layout/$id/_layout';
import { Route as TaskFlowsRunComputationLayoutIdLayoutSettingsImport } from './routes/task-flows/run-computation/_layout/$id/_layout/settings';
import { Route as TaskFlowsRunComputationLayoutIdLayoutRunningImport } from './routes/task-flows/run-computation/_layout/$id/_layout/running';
import { Route as TaskFlowsRunComputationLayoutIdLayoutResultsImport } from './routes/task-flows/run-computation/_layout/$id/_layout/results';
import { Route as TaskFlowsRunComputationLayoutIdLayoutDataInputsImport } from './routes/task-flows/run-computation/_layout/$id/_layout/data-inputs';

// Create Virtual Routes

const TaskFlowsRunComputationImport = createFileRoute(
  '/task-flows/run-computation'
)();
const TaskFlowsContributeDataImport = createFileRoute(
  '/task-flows/contribute-data'
)();
const TaskFlowsCompareDataImport = createFileRoute(
  '/task-flows/compare-data'
)();
const TaskFlowsRunComputationLayoutIdImport = createFileRoute(
  '/task-flows/run-computation/_layout/$id'
)();

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const TaskFlowsRunComputationRoute = TaskFlowsRunComputationImport.update({
  id: '/task-flows/run-computation',
  path: '/task-flows/run-computation',
  getParentRoute: () => rootRoute,
} as any);

const TaskFlowsContributeDataRoute = TaskFlowsContributeDataImport.update({
  id: '/task-flows/contribute-data',
  path: '/task-flows/contribute-data',
  getParentRoute: () => rootRoute,
} as any);

const TaskFlowsCompareDataRoute = TaskFlowsCompareDataImport.update({
  id: '/task-flows/compare-data',
  path: '/task-flows/compare-data',
  getParentRoute: () => rootRoute,
} as any);

const PlaygroundIndexRoute = PlaygroundIndexImport.update({
  id: '/playground/',
  path: '/playground/',
  getParentRoute: () => rootRoute,
} as any);

const TaskFlowsSearchDataRepositoriesIndexRoute =
  TaskFlowsSearchDataRepositoriesIndexImport.update({
    id: '/task-flows/search-data-repositories/',
    path: '/task-flows/search-data-repositories/',
    getParentRoute: () => rootRoute,
  } as any);

const TaskFlowsMonitorActivitiesIndexRoute =
  TaskFlowsMonitorActivitiesIndexImport.update({
    id: '/task-flows/monitor-activities/',
    path: '/task-flows/monitor-activities/',
    getParentRoute: () => rootRoute,
  } as any);

const TaskFlowsExploreDataIndexRoute = TaskFlowsExploreDataIndexImport.update({
  id: '/task-flows/explore-data/',
  path: '/task-flows/explore-data/',
  getParentRoute: () => rootRoute,
} as any);

const TaskFlowsSearchDataRepositoriesIdRoute =
  TaskFlowsSearchDataRepositoriesIdImport.update({
    id: '/task-flows/search-data-repositories/$id',
    path: '/task-flows/search-data-repositories/$id',
    getParentRoute: () => rootRoute,
  } as any);

const TaskFlowsRunComputationLayoutRoute =
  TaskFlowsRunComputationLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => TaskFlowsRunComputationRoute,
  } as any);

const TaskFlowsMonitorActivitiesDetailRoute =
  TaskFlowsMonitorActivitiesDetailImport.update({
    id: '/task-flows/monitor-activities/detail',
    path: '/task-flows/monitor-activities/detail',
    getParentRoute: () => rootRoute,
  } as any);

const TaskFlowsMonitorActivitiesCalendarRoute =
  TaskFlowsMonitorActivitiesCalendarImport.update({
    id: '/task-flows/monitor-activities/calendar',
    path: '/task-flows/monitor-activities/calendar',
    getParentRoute: () => rootRoute,
  } as any);

const TaskFlowsExploreDataIdRoute = TaskFlowsExploreDataIdImport.update({
  id: '/task-flows/explore-data/$id',
  path: '/task-flows/explore-data/$id',
  getParentRoute: () => rootRoute,
} as any);

const TaskFlowsContributeDataLayoutRoute =
  TaskFlowsContributeDataLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => TaskFlowsContributeDataRoute,
  } as any);

const TaskFlowsCompareDataLayoutRoute = TaskFlowsCompareDataLayoutImport.update(
  {
    id: '/_layout',
    getParentRoute: () => TaskFlowsCompareDataRoute,
  } as any
);

const TaskFlowsRunComputationLayoutIdRoute =
  TaskFlowsRunComputationLayoutIdImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => TaskFlowsRunComputationLayoutRoute,
  } as any);

const TaskFlowsRunComputationLayoutIndexRoute =
  TaskFlowsRunComputationLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TaskFlowsRunComputationLayoutRoute,
  } as any);

const TaskFlowsContributeDataLayoutIndexRoute =
  TaskFlowsContributeDataLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TaskFlowsContributeDataLayoutRoute,
  } as any);

const TaskFlowsCompareDataLayoutIndexRoute =
  TaskFlowsCompareDataLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => TaskFlowsCompareDataLayoutRoute,
  } as any);

const TaskFlowsContributeDataLayoutReviewRoute =
  TaskFlowsContributeDataLayoutReviewImport.update({
    id: '/review',
    path: '/review',
    getParentRoute: () => TaskFlowsContributeDataLayoutRoute,
  } as any);

const TaskFlowsContributeDataLayoutPortalRoute =
  TaskFlowsContributeDataLayoutPortalImport.update({
    id: '/portal',
    path: '/portal',
    getParentRoute: () => TaskFlowsContributeDataLayoutRoute,
  } as any);

const TaskFlowsContributeDataLayoutNewRoute =
  TaskFlowsContributeDataLayoutNewImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => TaskFlowsContributeDataLayoutRoute,
  } as any);

const TaskFlowsCompareDataLayoutNewRoute =
  TaskFlowsCompareDataLayoutNewImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => TaskFlowsCompareDataLayoutRoute,
  } as any);

const TaskFlowsCompareDataLayoutCompareRoute =
  TaskFlowsCompareDataLayoutCompareImport.update({
    id: '/compare',
    path: '/compare',
    getParentRoute: () => TaskFlowsCompareDataLayoutRoute,
  } as any);

const TaskFlowsRunComputationLayoutIdLayoutRoute =
  TaskFlowsRunComputationLayoutIdLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => TaskFlowsRunComputationLayoutIdRoute,
  } as any);

const TaskFlowsRunComputationLayoutIdLayoutSettingsRoute =
  TaskFlowsRunComputationLayoutIdLayoutSettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => TaskFlowsRunComputationLayoutIdLayoutRoute,
  } as any);

const TaskFlowsRunComputationLayoutIdLayoutRunningRoute =
  TaskFlowsRunComputationLayoutIdLayoutRunningImport.update({
    id: '/running',
    path: '/running',
    getParentRoute: () => TaskFlowsRunComputationLayoutIdLayoutRoute,
  } as any);

const TaskFlowsRunComputationLayoutIdLayoutResultsRoute =
  TaskFlowsRunComputationLayoutIdLayoutResultsImport.update({
    id: '/results',
    path: '/results',
    getParentRoute: () => TaskFlowsRunComputationLayoutIdLayoutRoute,
  } as any);

const TaskFlowsRunComputationLayoutIdLayoutDataInputsRoute =
  TaskFlowsRunComputationLayoutIdLayoutDataInputsImport.update({
    id: '/data-inputs',
    path: '/data-inputs',
    getParentRoute: () => TaskFlowsRunComputationLayoutIdLayoutRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/playground/': {
      id: '/playground/';
      path: '/playground';
      fullPath: '/playground';
      preLoaderRoute: typeof PlaygroundIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/compare-data': {
      id: '/task-flows/compare-data';
      path: '/task-flows/compare-data';
      fullPath: '/task-flows/compare-data';
      preLoaderRoute: typeof TaskFlowsCompareDataImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/compare-data/_layout': {
      id: '/task-flows/compare-data/_layout';
      path: '/task-flows/compare-data';
      fullPath: '/task-flows/compare-data';
      preLoaderRoute: typeof TaskFlowsCompareDataLayoutImport;
      parentRoute: typeof TaskFlowsCompareDataRoute;
    };
    '/task-flows/contribute-data': {
      id: '/task-flows/contribute-data';
      path: '/task-flows/contribute-data';
      fullPath: '/task-flows/contribute-data';
      preLoaderRoute: typeof TaskFlowsContributeDataImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/contribute-data/_layout': {
      id: '/task-flows/contribute-data/_layout';
      path: '/task-flows/contribute-data';
      fullPath: '/task-flows/contribute-data';
      preLoaderRoute: typeof TaskFlowsContributeDataLayoutImport;
      parentRoute: typeof TaskFlowsContributeDataRoute;
    };
    '/task-flows/explore-data/$id': {
      id: '/task-flows/explore-data/$id';
      path: '/task-flows/explore-data/$id';
      fullPath: '/task-flows/explore-data/$id';
      preLoaderRoute: typeof TaskFlowsExploreDataIdImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/monitor-activities/calendar': {
      id: '/task-flows/monitor-activities/calendar';
      path: '/task-flows/monitor-activities/calendar';
      fullPath: '/task-flows/monitor-activities/calendar';
      preLoaderRoute: typeof TaskFlowsMonitorActivitiesCalendarImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/monitor-activities/detail': {
      id: '/task-flows/monitor-activities/detail';
      path: '/task-flows/monitor-activities/detail';
      fullPath: '/task-flows/monitor-activities/detail';
      preLoaderRoute: typeof TaskFlowsMonitorActivitiesDetailImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/run-computation': {
      id: '/task-flows/run-computation';
      path: '/task-flows/run-computation';
      fullPath: '/task-flows/run-computation';
      preLoaderRoute: typeof TaskFlowsRunComputationImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/run-computation/_layout': {
      id: '/task-flows/run-computation/_layout';
      path: '/task-flows/run-computation';
      fullPath: '/task-flows/run-computation';
      preLoaderRoute: typeof TaskFlowsRunComputationLayoutImport;
      parentRoute: typeof TaskFlowsRunComputationRoute;
    };
    '/task-flows/search-data-repositories/$id': {
      id: '/task-flows/search-data-repositories/$id';
      path: '/task-flows/search-data-repositories/$id';
      fullPath: '/task-flows/search-data-repositories/$id';
      preLoaderRoute: typeof TaskFlowsSearchDataRepositoriesIdImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/explore-data/': {
      id: '/task-flows/explore-data/';
      path: '/task-flows/explore-data';
      fullPath: '/task-flows/explore-data';
      preLoaderRoute: typeof TaskFlowsExploreDataIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/monitor-activities/': {
      id: '/task-flows/monitor-activities/';
      path: '/task-flows/monitor-activities';
      fullPath: '/task-flows/monitor-activities';
      preLoaderRoute: typeof TaskFlowsMonitorActivitiesIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/search-data-repositories/': {
      id: '/task-flows/search-data-repositories/';
      path: '/task-flows/search-data-repositories';
      fullPath: '/task-flows/search-data-repositories';
      preLoaderRoute: typeof TaskFlowsSearchDataRepositoriesIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/task-flows/compare-data/_layout/compare': {
      id: '/task-flows/compare-data/_layout/compare';
      path: '/compare';
      fullPath: '/task-flows/compare-data/compare';
      preLoaderRoute: typeof TaskFlowsCompareDataLayoutCompareImport;
      parentRoute: typeof TaskFlowsCompareDataLayoutImport;
    };
    '/task-flows/compare-data/_layout/new': {
      id: '/task-flows/compare-data/_layout/new';
      path: '/new';
      fullPath: '/task-flows/compare-data/new';
      preLoaderRoute: typeof TaskFlowsCompareDataLayoutNewImport;
      parentRoute: typeof TaskFlowsCompareDataLayoutImport;
    };
    '/task-flows/contribute-data/_layout/new': {
      id: '/task-flows/contribute-data/_layout/new';
      path: '/new';
      fullPath: '/task-flows/contribute-data/new';
      preLoaderRoute: typeof TaskFlowsContributeDataLayoutNewImport;
      parentRoute: typeof TaskFlowsContributeDataLayoutImport;
    };
    '/task-flows/contribute-data/_layout/portal': {
      id: '/task-flows/contribute-data/_layout/portal';
      path: '/portal';
      fullPath: '/task-flows/contribute-data/portal';
      preLoaderRoute: typeof TaskFlowsContributeDataLayoutPortalImport;
      parentRoute: typeof TaskFlowsContributeDataLayoutImport;
    };
    '/task-flows/contribute-data/_layout/review': {
      id: '/task-flows/contribute-data/_layout/review';
      path: '/review';
      fullPath: '/task-flows/contribute-data/review';
      preLoaderRoute: typeof TaskFlowsContributeDataLayoutReviewImport;
      parentRoute: typeof TaskFlowsContributeDataLayoutImport;
    };
    '/task-flows/compare-data/_layout/': {
      id: '/task-flows/compare-data/_layout/';
      path: '/';
      fullPath: '/task-flows/compare-data/';
      preLoaderRoute: typeof TaskFlowsCompareDataLayoutIndexImport;
      parentRoute: typeof TaskFlowsCompareDataLayoutImport;
    };
    '/task-flows/contribute-data/_layout/': {
      id: '/task-flows/contribute-data/_layout/';
      path: '/';
      fullPath: '/task-flows/contribute-data/';
      preLoaderRoute: typeof TaskFlowsContributeDataLayoutIndexImport;
      parentRoute: typeof TaskFlowsContributeDataLayoutImport;
    };
    '/task-flows/run-computation/_layout/': {
      id: '/task-flows/run-computation/_layout/';
      path: '/';
      fullPath: '/task-flows/run-computation/';
      preLoaderRoute: typeof TaskFlowsRunComputationLayoutIndexImport;
      parentRoute: typeof TaskFlowsRunComputationLayoutImport;
    };
    '/task-flows/run-computation/_layout/$id': {
      id: '/task-flows/run-computation/_layout/$id';
      path: '/$id';
      fullPath: '/task-flows/run-computation/$id';
      preLoaderRoute: typeof TaskFlowsRunComputationLayoutIdImport;
      parentRoute: typeof TaskFlowsRunComputationLayoutImport;
    };
    '/task-flows/run-computation/_layout/$id/_layout': {
      id: '/task-flows/run-computation/_layout/$id/_layout';
      path: '/$id';
      fullPath: '/task-flows/run-computation/$id';
      preLoaderRoute: typeof TaskFlowsRunComputationLayoutIdLayoutImport;
      parentRoute: typeof TaskFlowsRunComputationLayoutIdRoute;
    };
    '/task-flows/run-computation/_layout/$id/_layout/data-inputs': {
      id: '/task-flows/run-computation/_layout/$id/_layout/data-inputs';
      path: '/data-inputs';
      fullPath: '/task-flows/run-computation/$id/data-inputs';
      preLoaderRoute: typeof TaskFlowsRunComputationLayoutIdLayoutDataInputsImport;
      parentRoute: typeof TaskFlowsRunComputationLayoutIdLayoutImport;
    };
    '/task-flows/run-computation/_layout/$id/_layout/results': {
      id: '/task-flows/run-computation/_layout/$id/_layout/results';
      path: '/results';
      fullPath: '/task-flows/run-computation/$id/results';
      preLoaderRoute: typeof TaskFlowsRunComputationLayoutIdLayoutResultsImport;
      parentRoute: typeof TaskFlowsRunComputationLayoutIdLayoutImport;
    };
    '/task-flows/run-computation/_layout/$id/_layout/running': {
      id: '/task-flows/run-computation/_layout/$id/_layout/running';
      path: '/running';
      fullPath: '/task-flows/run-computation/$id/running';
      preLoaderRoute: typeof TaskFlowsRunComputationLayoutIdLayoutRunningImport;
      parentRoute: typeof TaskFlowsRunComputationLayoutIdLayoutImport;
    };
    '/task-flows/run-computation/_layout/$id/_layout/settings': {
      id: '/task-flows/run-computation/_layout/$id/_layout/settings';
      path: '/settings';
      fullPath: '/task-flows/run-computation/$id/settings';
      preLoaderRoute: typeof TaskFlowsRunComputationLayoutIdLayoutSettingsImport;
      parentRoute: typeof TaskFlowsRunComputationLayoutIdLayoutImport;
    };
  }
}

// Create and export the route tree

interface TaskFlowsCompareDataLayoutRouteChildren {
  TaskFlowsCompareDataLayoutCompareRoute: typeof TaskFlowsCompareDataLayoutCompareRoute;
  TaskFlowsCompareDataLayoutNewRoute: typeof TaskFlowsCompareDataLayoutNewRoute;
  TaskFlowsCompareDataLayoutIndexRoute: typeof TaskFlowsCompareDataLayoutIndexRoute;
}

const TaskFlowsCompareDataLayoutRouteChildren: TaskFlowsCompareDataLayoutRouteChildren =
  {
    TaskFlowsCompareDataLayoutCompareRoute:
      TaskFlowsCompareDataLayoutCompareRoute,
    TaskFlowsCompareDataLayoutNewRoute: TaskFlowsCompareDataLayoutNewRoute,
    TaskFlowsCompareDataLayoutIndexRoute: TaskFlowsCompareDataLayoutIndexRoute,
  };

const TaskFlowsCompareDataLayoutRouteWithChildren =
  TaskFlowsCompareDataLayoutRoute._addFileChildren(
    TaskFlowsCompareDataLayoutRouteChildren
  );

interface TaskFlowsCompareDataRouteChildren {
  TaskFlowsCompareDataLayoutRoute: typeof TaskFlowsCompareDataLayoutRouteWithChildren;
}

const TaskFlowsCompareDataRouteChildren: TaskFlowsCompareDataRouteChildren = {
  TaskFlowsCompareDataLayoutRoute: TaskFlowsCompareDataLayoutRouteWithChildren,
};

const TaskFlowsCompareDataRouteWithChildren =
  TaskFlowsCompareDataRoute._addFileChildren(TaskFlowsCompareDataRouteChildren);

interface TaskFlowsContributeDataLayoutRouteChildren {
  TaskFlowsContributeDataLayoutNewRoute: typeof TaskFlowsContributeDataLayoutNewRoute;
  TaskFlowsContributeDataLayoutPortalRoute: typeof TaskFlowsContributeDataLayoutPortalRoute;
  TaskFlowsContributeDataLayoutReviewRoute: typeof TaskFlowsContributeDataLayoutReviewRoute;
  TaskFlowsContributeDataLayoutIndexRoute: typeof TaskFlowsContributeDataLayoutIndexRoute;
}

const TaskFlowsContributeDataLayoutRouteChildren: TaskFlowsContributeDataLayoutRouteChildren =
  {
    TaskFlowsContributeDataLayoutNewRoute:
      TaskFlowsContributeDataLayoutNewRoute,
    TaskFlowsContributeDataLayoutPortalRoute:
      TaskFlowsContributeDataLayoutPortalRoute,
    TaskFlowsContributeDataLayoutReviewRoute:
      TaskFlowsContributeDataLayoutReviewRoute,
    TaskFlowsContributeDataLayoutIndexRoute:
      TaskFlowsContributeDataLayoutIndexRoute,
  };

const TaskFlowsContributeDataLayoutRouteWithChildren =
  TaskFlowsContributeDataLayoutRoute._addFileChildren(
    TaskFlowsContributeDataLayoutRouteChildren
  );

interface TaskFlowsContributeDataRouteChildren {
  TaskFlowsContributeDataLayoutRoute: typeof TaskFlowsContributeDataLayoutRouteWithChildren;
}

const TaskFlowsContributeDataRouteChildren: TaskFlowsContributeDataRouteChildren =
  {
    TaskFlowsContributeDataLayoutRoute:
      TaskFlowsContributeDataLayoutRouteWithChildren,
  };

const TaskFlowsContributeDataRouteWithChildren =
  TaskFlowsContributeDataRoute._addFileChildren(
    TaskFlowsContributeDataRouteChildren
  );

interface TaskFlowsRunComputationLayoutIdLayoutRouteChildren {
  TaskFlowsRunComputationLayoutIdLayoutDataInputsRoute: typeof TaskFlowsRunComputationLayoutIdLayoutDataInputsRoute;
  TaskFlowsRunComputationLayoutIdLayoutResultsRoute: typeof TaskFlowsRunComputationLayoutIdLayoutResultsRoute;
  TaskFlowsRunComputationLayoutIdLayoutRunningRoute: typeof TaskFlowsRunComputationLayoutIdLayoutRunningRoute;
  TaskFlowsRunComputationLayoutIdLayoutSettingsRoute: typeof TaskFlowsRunComputationLayoutIdLayoutSettingsRoute;
}

const TaskFlowsRunComputationLayoutIdLayoutRouteChildren: TaskFlowsRunComputationLayoutIdLayoutRouteChildren =
  {
    TaskFlowsRunComputationLayoutIdLayoutDataInputsRoute:
      TaskFlowsRunComputationLayoutIdLayoutDataInputsRoute,
    TaskFlowsRunComputationLayoutIdLayoutResultsRoute:
      TaskFlowsRunComputationLayoutIdLayoutResultsRoute,
    TaskFlowsRunComputationLayoutIdLayoutRunningRoute:
      TaskFlowsRunComputationLayoutIdLayoutRunningRoute,
    TaskFlowsRunComputationLayoutIdLayoutSettingsRoute:
      TaskFlowsRunComputationLayoutIdLayoutSettingsRoute,
  };

const TaskFlowsRunComputationLayoutIdLayoutRouteWithChildren =
  TaskFlowsRunComputationLayoutIdLayoutRoute._addFileChildren(
    TaskFlowsRunComputationLayoutIdLayoutRouteChildren
  );

interface TaskFlowsRunComputationLayoutIdRouteChildren {
  TaskFlowsRunComputationLayoutIdLayoutRoute: typeof TaskFlowsRunComputationLayoutIdLayoutRouteWithChildren;
}

const TaskFlowsRunComputationLayoutIdRouteChildren: TaskFlowsRunComputationLayoutIdRouteChildren =
  {
    TaskFlowsRunComputationLayoutIdLayoutRoute:
      TaskFlowsRunComputationLayoutIdLayoutRouteWithChildren,
  };

const TaskFlowsRunComputationLayoutIdRouteWithChildren =
  TaskFlowsRunComputationLayoutIdRoute._addFileChildren(
    TaskFlowsRunComputationLayoutIdRouteChildren
  );

interface TaskFlowsRunComputationLayoutRouteChildren {
  TaskFlowsRunComputationLayoutIndexRoute: typeof TaskFlowsRunComputationLayoutIndexRoute;
  TaskFlowsRunComputationLayoutIdRoute: typeof TaskFlowsRunComputationLayoutIdRouteWithChildren;
}

const TaskFlowsRunComputationLayoutRouteChildren: TaskFlowsRunComputationLayoutRouteChildren =
  {
    TaskFlowsRunComputationLayoutIndexRoute:
      TaskFlowsRunComputationLayoutIndexRoute,
    TaskFlowsRunComputationLayoutIdRoute:
      TaskFlowsRunComputationLayoutIdRouteWithChildren,
  };

const TaskFlowsRunComputationLayoutRouteWithChildren =
  TaskFlowsRunComputationLayoutRoute._addFileChildren(
    TaskFlowsRunComputationLayoutRouteChildren
  );

interface TaskFlowsRunComputationRouteChildren {
  TaskFlowsRunComputationLayoutRoute: typeof TaskFlowsRunComputationLayoutRouteWithChildren;
}

const TaskFlowsRunComputationRouteChildren: TaskFlowsRunComputationRouteChildren =
  {
    TaskFlowsRunComputationLayoutRoute:
      TaskFlowsRunComputationLayoutRouteWithChildren,
  };

const TaskFlowsRunComputationRouteWithChildren =
  TaskFlowsRunComputationRoute._addFileChildren(
    TaskFlowsRunComputationRouteChildren
  );

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/playground': typeof PlaygroundIndexRoute;
  '/task-flows/compare-data': typeof TaskFlowsCompareDataLayoutRouteWithChildren;
  '/task-flows/contribute-data': typeof TaskFlowsContributeDataLayoutRouteWithChildren;
  '/task-flows/explore-data/$id': typeof TaskFlowsExploreDataIdRoute;
  '/task-flows/monitor-activities/calendar': typeof TaskFlowsMonitorActivitiesCalendarRoute;
  '/task-flows/monitor-activities/detail': typeof TaskFlowsMonitorActivitiesDetailRoute;
  '/task-flows/run-computation': typeof TaskFlowsRunComputationLayoutRouteWithChildren;
  '/task-flows/search-data-repositories/$id': typeof TaskFlowsSearchDataRepositoriesIdRoute;
  '/task-flows/explore-data': typeof TaskFlowsExploreDataIndexRoute;
  '/task-flows/monitor-activities': typeof TaskFlowsMonitorActivitiesIndexRoute;
  '/task-flows/search-data-repositories': typeof TaskFlowsSearchDataRepositoriesIndexRoute;
  '/task-flows/compare-data/compare': typeof TaskFlowsCompareDataLayoutCompareRoute;
  '/task-flows/compare-data/new': typeof TaskFlowsCompareDataLayoutNewRoute;
  '/task-flows/contribute-data/new': typeof TaskFlowsContributeDataLayoutNewRoute;
  '/task-flows/contribute-data/portal': typeof TaskFlowsContributeDataLayoutPortalRoute;
  '/task-flows/contribute-data/review': typeof TaskFlowsContributeDataLayoutReviewRoute;
  '/task-flows/compare-data/': typeof TaskFlowsCompareDataLayoutIndexRoute;
  '/task-flows/contribute-data/': typeof TaskFlowsContributeDataLayoutIndexRoute;
  '/task-flows/run-computation/': typeof TaskFlowsRunComputationLayoutIndexRoute;
  '/task-flows/run-computation/$id': typeof TaskFlowsRunComputationLayoutIdLayoutRouteWithChildren;
  '/task-flows/run-computation/$id/data-inputs': typeof TaskFlowsRunComputationLayoutIdLayoutDataInputsRoute;
  '/task-flows/run-computation/$id/results': typeof TaskFlowsRunComputationLayoutIdLayoutResultsRoute;
  '/task-flows/run-computation/$id/running': typeof TaskFlowsRunComputationLayoutIdLayoutRunningRoute;
  '/task-flows/run-computation/$id/settings': typeof TaskFlowsRunComputationLayoutIdLayoutSettingsRoute;
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/playground': typeof PlaygroundIndexRoute;
  '/task-flows/compare-data': typeof TaskFlowsCompareDataLayoutIndexRoute;
  '/task-flows/contribute-data': typeof TaskFlowsContributeDataLayoutIndexRoute;
  '/task-flows/explore-data/$id': typeof TaskFlowsExploreDataIdRoute;
  '/task-flows/monitor-activities/calendar': typeof TaskFlowsMonitorActivitiesCalendarRoute;
  '/task-flows/monitor-activities/detail': typeof TaskFlowsMonitorActivitiesDetailRoute;
  '/task-flows/run-computation': typeof TaskFlowsRunComputationLayoutIndexRoute;
  '/task-flows/search-data-repositories/$id': typeof TaskFlowsSearchDataRepositoriesIdRoute;
  '/task-flows/explore-data': typeof TaskFlowsExploreDataIndexRoute;
  '/task-flows/monitor-activities': typeof TaskFlowsMonitorActivitiesIndexRoute;
  '/task-flows/search-data-repositories': typeof TaskFlowsSearchDataRepositoriesIndexRoute;
  '/task-flows/compare-data/compare': typeof TaskFlowsCompareDataLayoutCompareRoute;
  '/task-flows/compare-data/new': typeof TaskFlowsCompareDataLayoutNewRoute;
  '/task-flows/contribute-data/new': typeof TaskFlowsContributeDataLayoutNewRoute;
  '/task-flows/contribute-data/portal': typeof TaskFlowsContributeDataLayoutPortalRoute;
  '/task-flows/contribute-data/review': typeof TaskFlowsContributeDataLayoutReviewRoute;
  '/task-flows/run-computation/$id': typeof TaskFlowsRunComputationLayoutIdLayoutRouteWithChildren;
  '/task-flows/run-computation/$id/data-inputs': typeof TaskFlowsRunComputationLayoutIdLayoutDataInputsRoute;
  '/task-flows/run-computation/$id/results': typeof TaskFlowsRunComputationLayoutIdLayoutResultsRoute;
  '/task-flows/run-computation/$id/running': typeof TaskFlowsRunComputationLayoutIdLayoutRunningRoute;
  '/task-flows/run-computation/$id/settings': typeof TaskFlowsRunComputationLayoutIdLayoutSettingsRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/': typeof IndexRoute;
  '/playground/': typeof PlaygroundIndexRoute;
  '/task-flows/compare-data': typeof TaskFlowsCompareDataRouteWithChildren;
  '/task-flows/compare-data/_layout': typeof TaskFlowsCompareDataLayoutRouteWithChildren;
  '/task-flows/contribute-data': typeof TaskFlowsContributeDataRouteWithChildren;
  '/task-flows/contribute-data/_layout': typeof TaskFlowsContributeDataLayoutRouteWithChildren;
  '/task-flows/explore-data/$id': typeof TaskFlowsExploreDataIdRoute;
  '/task-flows/monitor-activities/calendar': typeof TaskFlowsMonitorActivitiesCalendarRoute;
  '/task-flows/monitor-activities/detail': typeof TaskFlowsMonitorActivitiesDetailRoute;
  '/task-flows/run-computation': typeof TaskFlowsRunComputationRouteWithChildren;
  '/task-flows/run-computation/_layout': typeof TaskFlowsRunComputationLayoutRouteWithChildren;
  '/task-flows/search-data-repositories/$id': typeof TaskFlowsSearchDataRepositoriesIdRoute;
  '/task-flows/explore-data/': typeof TaskFlowsExploreDataIndexRoute;
  '/task-flows/monitor-activities/': typeof TaskFlowsMonitorActivitiesIndexRoute;
  '/task-flows/search-data-repositories/': typeof TaskFlowsSearchDataRepositoriesIndexRoute;
  '/task-flows/compare-data/_layout/compare': typeof TaskFlowsCompareDataLayoutCompareRoute;
  '/task-flows/compare-data/_layout/new': typeof TaskFlowsCompareDataLayoutNewRoute;
  '/task-flows/contribute-data/_layout/new': typeof TaskFlowsContributeDataLayoutNewRoute;
  '/task-flows/contribute-data/_layout/portal': typeof TaskFlowsContributeDataLayoutPortalRoute;
  '/task-flows/contribute-data/_layout/review': typeof TaskFlowsContributeDataLayoutReviewRoute;
  '/task-flows/compare-data/_layout/': typeof TaskFlowsCompareDataLayoutIndexRoute;
  '/task-flows/contribute-data/_layout/': typeof TaskFlowsContributeDataLayoutIndexRoute;
  '/task-flows/run-computation/_layout/': typeof TaskFlowsRunComputationLayoutIndexRoute;
  '/task-flows/run-computation/_layout/$id': typeof TaskFlowsRunComputationLayoutIdRouteWithChildren;
  '/task-flows/run-computation/_layout/$id/_layout': typeof TaskFlowsRunComputationLayoutIdLayoutRouteWithChildren;
  '/task-flows/run-computation/_layout/$id/_layout/data-inputs': typeof TaskFlowsRunComputationLayoutIdLayoutDataInputsRoute;
  '/task-flows/run-computation/_layout/$id/_layout/results': typeof TaskFlowsRunComputationLayoutIdLayoutResultsRoute;
  '/task-flows/run-computation/_layout/$id/_layout/running': typeof TaskFlowsRunComputationLayoutIdLayoutRunningRoute;
  '/task-flows/run-computation/_layout/$id/_layout/settings': typeof TaskFlowsRunComputationLayoutIdLayoutSettingsRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/playground'
    | '/task-flows/compare-data'
    | '/task-flows/contribute-data'
    | '/task-flows/explore-data/$id'
    | '/task-flows/monitor-activities/calendar'
    | '/task-flows/monitor-activities/detail'
    | '/task-flows/run-computation'
    | '/task-flows/search-data-repositories/$id'
    | '/task-flows/explore-data'
    | '/task-flows/monitor-activities'
    | '/task-flows/search-data-repositories'
    | '/task-flows/compare-data/compare'
    | '/task-flows/compare-data/new'
    | '/task-flows/contribute-data/new'
    | '/task-flows/contribute-data/portal'
    | '/task-flows/contribute-data/review'
    | '/task-flows/compare-data/'
    | '/task-flows/contribute-data/'
    | '/task-flows/run-computation/'
    | '/task-flows/run-computation/$id'
    | '/task-flows/run-computation/$id/data-inputs'
    | '/task-flows/run-computation/$id/results'
    | '/task-flows/run-computation/$id/running'
    | '/task-flows/run-computation/$id/settings';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/playground'
    | '/task-flows/compare-data'
    | '/task-flows/contribute-data'
    | '/task-flows/explore-data/$id'
    | '/task-flows/monitor-activities/calendar'
    | '/task-flows/monitor-activities/detail'
    | '/task-flows/run-computation'
    | '/task-flows/search-data-repositories/$id'
    | '/task-flows/explore-data'
    | '/task-flows/monitor-activities'
    | '/task-flows/search-data-repositories'
    | '/task-flows/compare-data/compare'
    | '/task-flows/compare-data/new'
    | '/task-flows/contribute-data/new'
    | '/task-flows/contribute-data/portal'
    | '/task-flows/contribute-data/review'
    | '/task-flows/run-computation/$id'
    | '/task-flows/run-computation/$id/data-inputs'
    | '/task-flows/run-computation/$id/results'
    | '/task-flows/run-computation/$id/running'
    | '/task-flows/run-computation/$id/settings';
  id:
    | '__root__'
    | '/'
    | '/playground/'
    | '/task-flows/compare-data'
    | '/task-flows/compare-data/_layout'
    | '/task-flows/contribute-data'
    | '/task-flows/contribute-data/_layout'
    | '/task-flows/explore-data/$id'
    | '/task-flows/monitor-activities/calendar'
    | '/task-flows/monitor-activities/detail'
    | '/task-flows/run-computation'
    | '/task-flows/run-computation/_layout'
    | '/task-flows/search-data-repositories/$id'
    | '/task-flows/explore-data/'
    | '/task-flows/monitor-activities/'
    | '/task-flows/search-data-repositories/'
    | '/task-flows/compare-data/_layout/compare'
    | '/task-flows/compare-data/_layout/new'
    | '/task-flows/contribute-data/_layout/new'
    | '/task-flows/contribute-data/_layout/portal'
    | '/task-flows/contribute-data/_layout/review'
    | '/task-flows/compare-data/_layout/'
    | '/task-flows/contribute-data/_layout/'
    | '/task-flows/run-computation/_layout/'
    | '/task-flows/run-computation/_layout/$id'
    | '/task-flows/run-computation/_layout/$id/_layout'
    | '/task-flows/run-computation/_layout/$id/_layout/data-inputs'
    | '/task-flows/run-computation/_layout/$id/_layout/results'
    | '/task-flows/run-computation/_layout/$id/_layout/running'
    | '/task-flows/run-computation/_layout/$id/_layout/settings';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  PlaygroundIndexRoute: typeof PlaygroundIndexRoute;
  TaskFlowsCompareDataRoute: typeof TaskFlowsCompareDataRouteWithChildren;
  TaskFlowsContributeDataRoute: typeof TaskFlowsContributeDataRouteWithChildren;
  TaskFlowsExploreDataIdRoute: typeof TaskFlowsExploreDataIdRoute;
  TaskFlowsMonitorActivitiesCalendarRoute: typeof TaskFlowsMonitorActivitiesCalendarRoute;
  TaskFlowsMonitorActivitiesDetailRoute: typeof TaskFlowsMonitorActivitiesDetailRoute;
  TaskFlowsRunComputationRoute: typeof TaskFlowsRunComputationRouteWithChildren;
  TaskFlowsSearchDataRepositoriesIdRoute: typeof TaskFlowsSearchDataRepositoriesIdRoute;
  TaskFlowsExploreDataIndexRoute: typeof TaskFlowsExploreDataIndexRoute;
  TaskFlowsMonitorActivitiesIndexRoute: typeof TaskFlowsMonitorActivitiesIndexRoute;
  TaskFlowsSearchDataRepositoriesIndexRoute: typeof TaskFlowsSearchDataRepositoriesIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PlaygroundIndexRoute: PlaygroundIndexRoute,
  TaskFlowsCompareDataRoute: TaskFlowsCompareDataRouteWithChildren,
  TaskFlowsContributeDataRoute: TaskFlowsContributeDataRouteWithChildren,
  TaskFlowsExploreDataIdRoute: TaskFlowsExploreDataIdRoute,
  TaskFlowsMonitorActivitiesCalendarRoute:
    TaskFlowsMonitorActivitiesCalendarRoute,
  TaskFlowsMonitorActivitiesDetailRoute: TaskFlowsMonitorActivitiesDetailRoute,
  TaskFlowsRunComputationRoute: TaskFlowsRunComputationRouteWithChildren,
  TaskFlowsSearchDataRepositoriesIdRoute:
    TaskFlowsSearchDataRepositoriesIdRoute,
  TaskFlowsExploreDataIndexRoute: TaskFlowsExploreDataIndexRoute,
  TaskFlowsMonitorActivitiesIndexRoute: TaskFlowsMonitorActivitiesIndexRoute,
  TaskFlowsSearchDataRepositoriesIndexRoute:
    TaskFlowsSearchDataRepositoriesIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/playground/",
        "/task-flows/compare-data",
        "/task-flows/contribute-data",
        "/task-flows/explore-data/$id",
        "/task-flows/monitor-activities/calendar",
        "/task-flows/monitor-activities/detail",
        "/task-flows/run-computation",
        "/task-flows/search-data-repositories/$id",
        "/task-flows/explore-data/",
        "/task-flows/monitor-activities/",
        "/task-flows/search-data-repositories/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/playground/": {
      "filePath": "playground/index.tsx"
    },
    "/task-flows/compare-data": {
      "filePath": "task-flows/compare-data",
      "children": [
        "/task-flows/compare-data/_layout"
      ]
    },
    "/task-flows/compare-data/_layout": {
      "filePath": "task-flows/compare-data/_layout.tsx",
      "parent": "/task-flows/compare-data",
      "children": [
        "/task-flows/compare-data/_layout/compare",
        "/task-flows/compare-data/_layout/new",
        "/task-flows/compare-data/_layout/"
      ]
    },
    "/task-flows/contribute-data": {
      "filePath": "task-flows/contribute-data",
      "children": [
        "/task-flows/contribute-data/_layout"
      ]
    },
    "/task-flows/contribute-data/_layout": {
      "filePath": "task-flows/contribute-data/_layout.tsx",
      "parent": "/task-flows/contribute-data",
      "children": [
        "/task-flows/contribute-data/_layout/new",
        "/task-flows/contribute-data/_layout/portal",
        "/task-flows/contribute-data/_layout/review",
        "/task-flows/contribute-data/_layout/"
      ]
    },
    "/task-flows/explore-data/$id": {
      "filePath": "task-flows/explore-data/$id.tsx"
    },
    "/task-flows/monitor-activities/calendar": {
      "filePath": "task-flows/monitor-activities/calendar.tsx"
    },
    "/task-flows/monitor-activities/detail": {
      "filePath": "task-flows/monitor-activities/detail.tsx"
    },
    "/task-flows/run-computation": {
      "filePath": "task-flows/run-computation",
      "children": [
        "/task-flows/run-computation/_layout"
      ]
    },
    "/task-flows/run-computation/_layout": {
      "filePath": "task-flows/run-computation/_layout.tsx",
      "parent": "/task-flows/run-computation",
      "children": [
        "/task-flows/run-computation/_layout/",
        "/task-flows/run-computation/_layout/$id"
      ]
    },
    "/task-flows/search-data-repositories/$id": {
      "filePath": "task-flows/search-data-repositories/$id.tsx"
    },
    "/task-flows/explore-data/": {
      "filePath": "task-flows/explore-data/index.tsx"
    },
    "/task-flows/monitor-activities/": {
      "filePath": "task-flows/monitor-activities/index.tsx"
    },
    "/task-flows/search-data-repositories/": {
      "filePath": "task-flows/search-data-repositories/index.tsx"
    },
    "/task-flows/compare-data/_layout/compare": {
      "filePath": "task-flows/compare-data/_layout/compare.tsx",
      "parent": "/task-flows/compare-data/_layout"
    },
    "/task-flows/compare-data/_layout/new": {
      "filePath": "task-flows/compare-data/_layout/new.tsx",
      "parent": "/task-flows/compare-data/_layout"
    },
    "/task-flows/contribute-data/_layout/new": {
      "filePath": "task-flows/contribute-data/_layout/new.tsx",
      "parent": "/task-flows/contribute-data/_layout"
    },
    "/task-flows/contribute-data/_layout/portal": {
      "filePath": "task-flows/contribute-data/_layout/portal.tsx",
      "parent": "/task-flows/contribute-data/_layout"
    },
    "/task-flows/contribute-data/_layout/review": {
      "filePath": "task-flows/contribute-data/_layout/review.tsx",
      "parent": "/task-flows/contribute-data/_layout"
    },
    "/task-flows/compare-data/_layout/": {
      "filePath": "task-flows/compare-data/_layout/index.tsx",
      "parent": "/task-flows/compare-data/_layout"
    },
    "/task-flows/contribute-data/_layout/": {
      "filePath": "task-flows/contribute-data/_layout/index.tsx",
      "parent": "/task-flows/contribute-data/_layout"
    },
    "/task-flows/run-computation/_layout/": {
      "filePath": "task-flows/run-computation/_layout/index.tsx",
      "parent": "/task-flows/run-computation/_layout"
    },
    "/task-flows/run-computation/_layout/$id": {
      "filePath": "task-flows/run-computation/_layout/$id",
      "parent": "/task-flows/run-computation/_layout",
      "children": [
        "/task-flows/run-computation/_layout/$id/_layout"
      ]
    },
    "/task-flows/run-computation/_layout/$id/_layout": {
      "filePath": "task-flows/run-computation/_layout/$id/_layout.tsx",
      "parent": "/task-flows/run-computation/_layout/$id",
      "children": [
        "/task-flows/run-computation/_layout/$id/_layout/data-inputs",
        "/task-flows/run-computation/_layout/$id/_layout/results",
        "/task-flows/run-computation/_layout/$id/_layout/running",
        "/task-flows/run-computation/_layout/$id/_layout/settings"
      ]
    },
    "/task-flows/run-computation/_layout/$id/_layout/data-inputs": {
      "filePath": "task-flows/run-computation/_layout/$id/_layout/data-inputs.tsx",
      "parent": "/task-flows/run-computation/_layout/$id/_layout"
    },
    "/task-flows/run-computation/_layout/$id/_layout/results": {
      "filePath": "task-flows/run-computation/_layout/$id/_layout/results.tsx",
      "parent": "/task-flows/run-computation/_layout/$id/_layout"
    },
    "/task-flows/run-computation/_layout/$id/_layout/running": {
      "filePath": "task-flows/run-computation/_layout/$id/_layout/running.tsx",
      "parent": "/task-flows/run-computation/_layout/$id/_layout"
    },
    "/task-flows/run-computation/_layout/$id/_layout/settings": {
      "filePath": "task-flows/run-computation/_layout/$id/_layout/settings.tsx",
      "parent": "/task-flows/run-computation/_layout/$id/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
